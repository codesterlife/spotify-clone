{"ast":null,"code":"var _jsxFileName = \"/home/codester/github-projects/spotify-clone/src/App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport Login from \"./Login.js\";\nimport { getTokenFromUrl } from \"./spotify.js\";\nimport Player from \"./Player\";\nimport { useDataLayerValue } from \"./DataLayer\";\n\nfunction App() {\n  const [{\n    user,\n    token\n  }, dispatch] = useDataLayerValue();\n  const spotify = new SpotifyWebApi();\n  useEffect(() => {\n    const hash = getTokenFromUrl();\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n\n    if (_token) {\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token\n      });\n      spotify.setAccessToken(_token);\n      spotify.getMe().then(user => {\n        dispatch({\n          type: \"SET_USER\",\n          user: user\n        });\n      });\n      spotify.getUserPlaylists().then(playlists => {\n        dispatch({\n          type: \"SET_PLAYLISTS\",\n          playlists: playlists\n        });\n      }); //spotify.getPlaylist()\n    }\n  }, []);\n  return (\n    /*#__PURE__*/\n    // BEM\n    React.createElement(\"div\", {\n      className: \"app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }\n    }, token ? /*#__PURE__*/React.createElement(Player, {\n      spotify: spotify,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 16\n      }\n    }) : /*#__PURE__*/React.createElement(Login, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 47\n      }\n    }))\n  );\n}\n\nexport default App;","map":{"version":3,"sources":["/home/codester/github-projects/spotify-clone/src/App.js"],"names":["React","useEffect","useState","SpotifyWebApi","Login","getTokenFromUrl","Player","useDataLayerValue","App","user","token","dispatch","spotify","hash","window","location","_token","access_token","type","setAccessToken","getMe","then","getUserPlaylists","playlists"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,SAASC,eAAT,QAAgC,cAAhC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,iBAAT,QAAkC,aAAlC;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAD,EAAkBC,QAAlB,IAA8BJ,iBAAiB,EAArD;AAEA,QAAMK,OAAO,GAAG,IAAIT,aAAJ,EAAhB;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,IAAI,GAAGR,eAAe,EAA5B;AACAS,IAAAA,MAAM,CAACC,QAAP,CAAgBF,IAAhB,GAAuB,EAAvB;AACA,UAAMG,MAAM,GAAGH,IAAI,CAACI,YAApB;;AAEA,QAAID,MAAJ,EAAY;AACVL,MAAAA,QAAQ,CAAC;AACPO,QAAAA,IAAI,EAAE,WADC;AAEPR,QAAAA,KAAK,EAAEM;AAFA,OAAD,CAAR;AAKAJ,MAAAA,OAAO,CAACO,cAAR,CAAuBH,MAAvB;AAEAJ,MAAAA,OAAO,CAACQ,KAAR,GAAgBC,IAAhB,CAAsBZ,IAAD,IAAU;AAC7BE,QAAAA,QAAQ,CAAC;AACPO,UAAAA,IAAI,EAAE,UADC;AAEPT,UAAAA,IAAI,EAAEA;AAFC,SAAD,CAAR;AAID,OALD;AAMAG,MAAAA,OAAO,CAACU,gBAAR,GAA2BD,IAA3B,CAAiCE,SAAD,IAAe;AAC7CZ,QAAAA,QAAQ,CAAC;AACPO,UAAAA,IAAI,EAAE,eADC;AAEPK,UAAAA,SAAS,EAAEA;AAFJ,SAAD,CAAR;AAID,OALD,EAdU,CAqBV;AACD;AACF,GA5BQ,EA4BN,EA5BM,CAAT;AA8BA;AAAA;AACE;AACA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGb,KAAK,gBAAG,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAEE,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,gBAAkC,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD1C;AAFF;AAMD;;AAED,eAAeJ,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport Login from \"./Login.js\";\nimport { getTokenFromUrl } from \"./spotify.js\";\nimport Player from \"./Player\";\nimport { useDataLayerValue } from \"./DataLayer\";\n\nfunction App() {\n  const [{ user, token }, dispatch] = useDataLayerValue();\n\n  const spotify = new SpotifyWebApi();\n\n  useEffect(() => {\n    const hash = getTokenFromUrl();\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n\n    if (_token) {\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token,\n      });\n\n      spotify.setAccessToken(_token);\n\n      spotify.getMe().then((user) => {\n        dispatch({\n          type: \"SET_USER\",\n          user: user,\n        });\n      });\n      spotify.getUserPlaylists().then((playlists) => {\n        dispatch({\n          type: \"SET_PLAYLISTS\",\n          playlists: playlists,\n        });\n      });\n\n      //spotify.getPlaylist()\n    }\n  }, []);\n\n  return (\n    // BEM\n    <div className=\"app\">\n      {token ? <Player spotify={spotify} /> : <Login />}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}